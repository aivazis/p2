// -*- c++ -*-
//
// michael a.g. aïvázis <michael.aivazis@para-sim.com>
// (c) 1998-2020 all rights reserved

// code guard
#if !defined(pyre_journal_Firewall_icc)
#error this file contains implementation details for pyre::journal::Firewall
#else


// metamethods
pyre::journal::Firewall::
Firewall(const name_type & name, verbosity_type verbosity) :
    channel_type(name, verbosity)
{
    // get my entry
    entry_type & e = entry();
    // decorate with my severity
    e.note("severity", "debug");
}


// implementation details
// record the message to the chosen device
void
pyre::journal::Firewall::
record()
{
    // hunt down the device to use
    auto dev = device();
    // and record the entry
    dev->memo(entry());
    // all done
    return;
}


// raise an exception when fatal
void
pyre::journal::Firewall::
die()
{
    // prepare a message
    auto msg = name() + firewall_error::string_type(": FIREWALL BREACHED!");
    // throw a firewall
    throw exception_type(msg);
}


// initialize the channel index
auto
pyre::journal::Firewall::
initializeIndex() -> index_type
{
    // make an empty index and return it; for {firewall}, channels are (active,fatal) by default
    return index_type(true, true);
}


#endif

// end of file
