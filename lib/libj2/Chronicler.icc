// -*- c++ -*-
//
// michael a.g. aïvázis <michael.aivazis@para-sim.com>
// (c) 1998-2020 all rights reserved

// code guard
#if !defined(pyre_journal_Chronicler_icc)
#error this file contains implementation details for pyre::journal::Chronicler
#else


// accessors
auto
pyre::journal::Chronicler::
verbosity() -> verbosity_type
{
    // easy enough
    return _verbosity;
}


auto
pyre::journal::Chronicler::
verbosity(verbosity_type verbosity) -> verbosity_type
{
    // swap
    std::swap(verbosity, _verbosity);
    // and return the old value
    return verbosity;
}


auto
pyre::journal::Chronicler::
globals() -> metadata_type &
{
    // grant access to my global metadata
    return _globals;
}


auto
pyre::journal::Chronicler::
device() -> device_pointer
{
    // share my device
    return _device;
}


// mutators
auto
pyre::journal::Chronicler::
device(device_pointer device) -> device_pointer
{
    // swap mine with the incoming device
    std::swap(device, _device);
    // and return it
    return device;
}


#endif

// end of file
