// -*- c++ -*-
//
// michael a.g. aïvázis <michael.aivazis@para-sim.com>
// (c) 1998-2020 all rights reserved

// code guard
#if !defined(pyre_journal_Fatal_icc)
#error This header contains implementation details of pyre::journal::Fatal
#else


// metamethods
template <bool fatalV, bool stateV>
pyre::journal::Fatal<fatalV, stateV>::
Fatal(state_type fatal, state_type state, device_pointer device) :
    Inventory<stateV>(state, device),
    _fatal(fatal)
{}


// interface
// accessor
template <bool fatalV, bool stateV>
auto
pyre::journal::Fatal<fatalV, stateV>::
fatal() const -> state_type
{
    // easy enough
    return _fatal;
}


// mutator
template <bool fatalV, bool stateV>
auto
pyre::journal::Fatal<fatalV, stateV>::
fatal(bool flag) -> state_type
{
    // swap
    std::swap(flag, _fatal);
    // and return the old value
    return flag;
}


#endif

// end of file
